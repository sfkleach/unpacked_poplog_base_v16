#!/bin/sh

# setup local directory tree for poplog root
# may be a symbolic link to something else

poplogroot=`pwd`

usepop=$poplogroot

popcom=$usepop/pop/com

# set the poplocal variables
poplocal=$poplogroot
local=$poplocal/local

# Run the initialisation files to set up additional environment
# variables, extend $PATH, etc.
. $usepop/pop/com/poplog.sh

export poplocal poplib poplogroot local usepop

# export POP__as='/usr/bin/arm-none-eabi-as'
POP__as=/usr/bin/as
export POP__as
POP_arch=x86_64

if true ; then
cd pop/src

pwd
echo "rebuilding system images"

../../mk_cross -d -a=$POP_arch popc poplibr poplink

cd ../pop

ls -l *.psv

ln -s corepop popc
ln -s corepop poplibr
ln -s corepop poplink

fi

if true ; then
cd $popexternlib
pwd

# echo "mklibpop"
./mklibpop

cd $popcom
pwd

cd $usepop/pop/obj
    pwd
    echo 'saving library files in old'
    mkdir old
    ls -l
    mv *.* old
fi

echo 'Recompiling base system'
cd $usepop/pop/src
    pwd
    echo 'popc'
    popc -c -nosys $POP_arch/*.[ps] *.p

    echo 'poplibr'
    # pglibr -c ../obj/src.wlb *.w
    poplibr -c ../obj/src.wlb *.w
    # rm *.[ow]
echo 'After recompilation'

# exit 0

# link a complete system into a newpop11 image, using pglink
echo " -----------------------------------------------"
echo "link a complete system into a newpop11 image, using pglink"
echo " -----------------------------------------------"
cd $popsys
pglink -core

# exit
ls -l

